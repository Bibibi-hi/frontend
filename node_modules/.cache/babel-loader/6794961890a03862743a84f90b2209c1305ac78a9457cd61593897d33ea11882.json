{"ast":null,"code":"const express = require('express');\nconst https = require('https');\nconst fs = require('fs');\nconst cors = require('cors');\nconst axios = require('axios');\nconst path = require('path');\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n// Đọc chứng chỉ HTTPS\nconst key = fs.readFileSync(path.join(__dirname, 'cert', 'key.pem'));\nconst cert = fs.readFileSync(path.join(__dirname, 'cert', 'cert.pem'));\nconst server = https.createServer({\n  key,\n  cert\n}, app);\n\n// Dữ liệu điểm nghẽn giao thông\nconst trafficData = require('./data/traffic-points.json');\n\n// API KEY của Visual Crossing\nconst VISUAL_CROSSING_API_KEY = 'RqJrPdNDgxd7LvLhbZYW2QokZzCs63nY';\n\n// Hàm chuyển đổi mã thời tiết sang mô tả\nfunction getWeatherDescription(code) {\n  const descriptions = {\n    1000: \"Trời quang đãng\",\n    1100: \"Trời ít mây\",\n    1101: \"Mây rải rác\",\n    1001: \"Trời âm u\",\n    4000: \"Mưa nhẹ\",\n    4001: \"Mưa vừa\",\n    4200: \"Mưa rào nhẹ\",\n    4201: \"Mưa rào lớn\",\n    5000: \"Tuyết nhẹ\",\n    5100: \"Tuyết vừa\",\n    5101: \"Tuyết dày\",\n    6000: \"Mưa đá nhẹ\",\n    6001: \"Mưa đá\",\n    6200: \"Mưa tuyết nhẹ\",\n    6201: \"Mưa tuyết lớn\",\n    7000: \"Gió mạnh\",\n    8000: \"Bão giông\"\n  };\n  return descriptions[code] || `Mã thời tiết: ${code}`;\n}\n\n// API chính\napp.post('/api/check-risk', async (req, res) => {\n  let {\n    province\n  } = req.body;\n\n  // Chuẩn hóa tên tỉnh không dấu cho API\n  const provinceFormatted = province.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  try {\n    const url = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(provinceFormatted)}?unitGroup=metric&key=${VISUAL_CROSSING_API_KEY}&include=days&lang=vi`;\n    const response = await axios.get(url);\n    const data = response.data;\n    const forecast7Days = data.days.slice(0, 7).map(day => {\n      return {\n        date: day.datetime,\n        description: getWeatherDescription(day.icon),\n        temp: day.temp\n      };\n    });\n    const highTemp = forecast7Days.some(d => d.temp > 35);\n    const heavyRain = forecast7Days.some(d => d.description.includes('mưa') || d.description.includes('bão'));\n    let risk = 'Thấp';\n    if (highTemp && heavyRain) risk = 'Cao';else if (highTemp || heavyRain) risk = 'Trung bình';\n    const trafficPoints = trafficData[province] || [];\n    res.json({\n      risk,\n      weatherForecast: forecast7Days,\n      trafficPoints\n    });\n  } catch (error) {\n    console.error('Lỗi khi gọi API thời tiết:', error.message);\n    res.status(500).json({\n      error: 'Không thể truy cập dữ liệu thời tiết'\n    });\n  }\n});\nconst PORT = process.env.PORT || 5001; // Đổi sang 5001 nếu bị trùng\nserver.listen(PORT, () => {\n  console.log(`✅ Server đang chạy tại https://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","https","fs","cors","axios","path","app","use","json","key","readFileSync","join","__dirname","cert","server","createServer","trafficData","VISUAL_CROSSING_API_KEY","getWeatherDescription","code","descriptions","post","req","res","province","body","provinceFormatted","normalize","replace","url","encodeURIComponent","response","get","data","forecast7Days","days","slice","map","day","date","datetime","description","icon","temp","highTemp","some","d","heavyRain","includes","risk","trafficPoints","weatherForecast","error","console","message","status","PORT","process","env","listen","log"],"sources":["C:/transport-risk-app/frontend/src/App.js"],"sourcesContent":["const express = require('express');\nconst https = require('https');\nconst fs = require('fs');\nconst cors = require('cors');\nconst axios = require('axios');\nconst path = require('path');\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n// Đọc chứng chỉ HTTPS\nconst key = fs.readFileSync(path.join(__dirname, 'cert', 'key.pem'));\nconst cert = fs.readFileSync(path.join(__dirname, 'cert', 'cert.pem'));\nconst server = https.createServer({ key, cert }, app);\n\n// Dữ liệu điểm nghẽn giao thông\nconst trafficData = require('./data/traffic-points.json');\n\n// API KEY của Visual Crossing\nconst VISUAL_CROSSING_API_KEY = 'RqJrPdNDgxd7LvLhbZYW2QokZzCs63nY';\n\n// Hàm chuyển đổi mã thời tiết sang mô tả\nfunction getWeatherDescription(code) {\n  const descriptions = {\n    1000: \"Trời quang đãng\",\n    1100: \"Trời ít mây\",\n    1101: \"Mây rải rác\",\n    1001: \"Trời âm u\",\n    4000: \"Mưa nhẹ\",\n    4001: \"Mưa vừa\",\n    4200: \"Mưa rào nhẹ\",\n    4201: \"Mưa rào lớn\",\n    5000: \"Tuyết nhẹ\",\n    5100: \"Tuyết vừa\",\n    5101: \"Tuyết dày\",\n    6000: \"Mưa đá nhẹ\",\n    6001: \"Mưa đá\",\n    6200: \"Mưa tuyết nhẹ\",\n    6201: \"Mưa tuyết lớn\",\n    7000: \"Gió mạnh\",\n    8000: \"Bão giông\"\n  };\n  return descriptions[code] || `Mã thời tiết: ${code}`;\n}\n\n// API chính\napp.post('/api/check-risk', async (req, res) => {\n  let { province } = req.body;\n\n  // Chuẩn hóa tên tỉnh không dấu cho API\n  const provinceFormatted = province.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n\n  try {\n    const url = `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${encodeURIComponent(provinceFormatted)}?unitGroup=metric&key=${VISUAL_CROSSING_API_KEY}&include=days&lang=vi`;\n    const response = await axios.get(url);\n    const data = response.data;\n\n    const forecast7Days = data.days.slice(0, 7).map(day => {\n      return {\n        date: day.datetime,\n        description: getWeatherDescription(day.icon),\n        temp: day.temp\n      };\n    });\n\n    const highTemp = forecast7Days.some(d => d.temp > 35);\n    const heavyRain = forecast7Days.some(d => d.description.includes('mưa') || d.description.includes('bão'));\n\n    let risk = 'Thấp';\n    if (highTemp && heavyRain) risk = 'Cao';\n    else if (highTemp || heavyRain) risk = 'Trung bình';\n\n    const trafficPoints = trafficData[province] || [];\n\n    res.json({\n      risk,\n      weatherForecast: forecast7Days,\n      trafficPoints\n    });\n  } catch (error) {\n    console.error('Lỗi khi gọi API thời tiết:', error.message);\n    res.status(500).json({ error: 'Không thể truy cập dữ liệu thời tiết' });\n  }\n});\n\nconst PORT = process.env.PORT || 5001; // Đổi sang 5001 nếu bị trùng\nserver.listen(PORT, () => {\n  console.log(`✅ Server đang chạy tại https://localhost:${PORT}`);\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}